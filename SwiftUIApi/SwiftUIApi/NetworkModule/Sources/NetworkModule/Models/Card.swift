//
// Card.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct Card: Codable { 


    public enum Types: String, Codable, CaseIterable {
        case colorless = "Colorless"
        case darkness = "Darkness"
        case dragon = "Dragon"
        case fairy = "Fairy"
        case fighting = "Fighting"
        case fire = "Fire"
        case grass = "Grass"
        case lightning = "Lightning"
        case metal = "Metal"
        case psychic = "Psychic"
        case water = "Water"
    }
    public enum Supertype: String, Codable, CaseIterable {
        case energy = "Energy"
        case pokemon = "Pokémon"
        case trainer = "Trainer"
    }
    public enum Subtype: String, Codable, CaseIterable {
        case ex = "EX"
        case special = "Special"
        case restored = "Restored"
        case levelUp = "Level Up"
        case mega = "MEGA"
        case technicalMachine = "Technical Machine"
        case item = "Item"
        case stadium = "Stadium"
        case supporter = "Supporter"
        case stage1 = "Stage 1"
        case gx = "GX"
        case pokemonTool = "Pokémon Tool"
        case basic = "Basic"
        case legend = "LEGEND"
        case stage2 = "Stage 2"
        case breakValue = "BREAK"
        case rocketsSecretMachine = "Rocket's Secret Machine"
        case empty = ""
    }
    public var id: String?
    public var name: String?
    public var nationalPokedexNumber: Int?
    public var imageUrl: String?
    public var imageUrlHiRes: String?
    public var types: [Types]?
    public var supertype: Supertype?
    public var subtype: Subtype?
    public var evolvesFrom: String?
    public var hp: String?
    public var number: String?
    public var artist: String?
    public var rarity: String?
    public var series: String?
    public var setValue: String?
    public var setCode: String?
    public var retreatCost: [String]?
    public var convertedRetreatCost: Int?
    public var attacks: [Attack]?
    public var weaknesses: [Weakness]?
    public var resistances: [Resistance]?
    public var ancientTrait: [AncientTrait]?

    public init(id: String?, name: String?, nationalPokedexNumber: Int?, imageUrl: String?, imageUrlHiRes: String?, types: [Types]?, supertype: Supertype?, subtype: Subtype?, evolvesFrom: String?, hp: String?, number: String?, artist: String?, rarity: String?, series: String?, setValue: String?, setCode: String?, retreatCost: [String]?, convertedRetreatCost: Int?, attacks: [Attack]?, weaknesses: [Weakness]?, resistances: [Resistance]?, ancientTrait: [AncientTrait]?) {
        self.id = id
        self.name = name
        self.nationalPokedexNumber = nationalPokedexNumber
        self.imageUrl = imageUrl
        self.imageUrlHiRes = imageUrlHiRes
        self.types = types
        self.supertype = supertype
        self.subtype = subtype
        self.evolvesFrom = evolvesFrom
        self.hp = hp
        self.number = number
        self.artist = artist
        self.rarity = rarity
        self.series = series
        self.setValue = setValue
        self.setCode = setCode
        self.retreatCost = retreatCost
        self.convertedRetreatCost = convertedRetreatCost
        self.attacks = attacks
        self.weaknesses = weaknesses
        self.resistances = resistances
        self.ancientTrait = ancientTrait
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case id
        case name
        case nationalPokedexNumber
        case imageUrl
        case imageUrlHiRes
        case types
        case supertype
        case subtype
        case evolvesFrom
        case hp
        case number
        case artist
        case rarity
        case series
        case setValue = "set"
        case setCode
        case retreatCost
        case convertedRetreatCost
        case attacks
        case weaknesses
        case resistances
        case ancientTrait
    }

}
