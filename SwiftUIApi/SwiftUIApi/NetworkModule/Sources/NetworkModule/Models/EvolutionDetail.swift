//
// EvolutionDetail.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation


public struct EvolutionDetail: Codable { 


    public var item: Item?
    public var trigger: EvolutionTrigger?
    public var gender: Int?
    public var heldItem: Item?
    public var knownMove: Move?
    public var knownMoveType: ModelType?
    public var location: Location?
    public var minLevel: Int?
    public var minHappiness: Int?
    public var minBeauty: Int?
    public var minAffection: Int?
    public var needsOverworldRain: Bool?
    public var partySpecies: PokemonSpecies?
    public var partyType: ModelType?
    public var relativePhysicalStats: Int?
    public var timeOfDay: String?
    public var tradeSpecies: PokemonSpecies?
    public var turnUpsideDown: Bool?

    public init(item: Item?, trigger: EvolutionTrigger?, gender: Int?, heldItem: Item?, knownMove: Move?, knownMoveType: ModelType?, location: Location?, minLevel: Int?, minHappiness: Int?, minBeauty: Int?, minAffection: Int?, needsOverworldRain: Bool?, partySpecies: PokemonSpecies?, partyType: ModelType?, relativePhysicalStats: Int?, timeOfDay: String?, tradeSpecies: PokemonSpecies?, turnUpsideDown: Bool?) {
        self.item = item
        self.trigger = trigger
        self.gender = gender
        self.heldItem = heldItem
        self.knownMove = knownMove
        self.knownMoveType = knownMoveType
        self.location = location
        self.minLevel = minLevel
        self.minHappiness = minHappiness
        self.minBeauty = minBeauty
        self.minAffection = minAffection
        self.needsOverworldRain = needsOverworldRain
        self.partySpecies = partySpecies
        self.partyType = partyType
        self.relativePhysicalStats = relativePhysicalStats
        self.timeOfDay = timeOfDay
        self.tradeSpecies = tradeSpecies
        self.turnUpsideDown = turnUpsideDown
    }

    public enum CodingKeys: String, CodingKey, CaseIterable { 
        case item
        case trigger
        case gender
        case heldItem = "held_item"
        case knownMove = "known_move"
        case knownMoveType = "known_move_type"
        case location
        case minLevel = "min_level"
        case minHappiness = "min_happiness"
        case minBeauty = "min_beauty"
        case minAffection = "min_affection"
        case needsOverworldRain = "needs_overworld_rain"
        case partySpecies = "party_species"
        case partyType = "party_type"
        case relativePhysicalStats = "relative_physical_stats"
        case timeOfDay = "time_of_day"
        case tradeSpecies = "trade_species"
        case turnUpsideDown = "turn_upside_down"
    }

}
